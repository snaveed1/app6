name: CI - Build and Push to Artifact Registry

on:
  push:
    branches:
      - main  # Trigger the CI on push to the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set environment variable for the image tag
      - name: Set image tag
        run: echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      # Step 3: Authenticate to Google Cloud using Workload Identity Federation
      - id: 'auth'
        name: 'Obtain access token by using Workload Identity Federation'
        uses: 'google-github-actions/auth@v2'
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: "projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions-1/providers/github-actions"
          service_account: "wif-sa@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com"

      # Step 4: Configure Docker to use gcloud as a credential helper for Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: |
          echo "${{ steps.auth.outputs.access_token }}" | docker login -u oauth2accesstoken --password-stdin us-central1-docker.pkg.dev

      # Step 5: Build and push Docker image for app6 to Artifact Registry
      - name: Build and Push Docker Image
        run: |
          # Define the image name
          image="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/apps-images/app6:${{ env.IMAGE_TAG }}"

          # Build the Docker image
          docker build -t "$image" "."

          # Push the Docker image
          docker push "$image"

      # Step 6: Clone the GitOps repository
      - name: Clone GitOps repository
        run: |
          git clone https://${{ secrets.GIT_OPS_GITHUB_USER }}:${{ secrets.GIT_OPS_GITHUB_TOKEN }}@github.com/snaveed1/gitops-apps-repo.git
          cd gitops-apps-repo
          git checkout non-prod

          git config user.name "snaveed1"
          git config user.email "shaikhnaved10346@gmail.com"
          
          # Step 7: Update app6deployment.yml with the new image tag
          yq e '.spec.template.spec.containers[0].image = "${{ secrets.GCP_GAR_HOST }}/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPO }}/${{ secrets.GCP_IMAGE_NAME }}:${{ github.sha }}"' -i app6/app6deployment.yml

          git add app6/app6deployment.yml
          git commit -m "updating deployment configuration"  
          git push --set-upstream origin non-prod
